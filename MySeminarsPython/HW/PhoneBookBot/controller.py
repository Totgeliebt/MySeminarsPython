import operations as oper
import logger as log
from telegram import ReplyKeyboardMarkup, ReplyKeyboardRemove, Update, Bot
from telegram.ext import Updater, CommandHandler, Filters, MessageHandler, ConversationHandler

TOKEN='5773125696:AAEob7v8Vbrn6dp-TiW9FJwoHm9aTKTO-0c'


bot = Bot(token=TOKEN)
updater = Updater(token=TOKEN)
dispatcher = updater.dispatcher


def start(update, context):
    reply_keyboard = [['–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å'], ['–ù–∞–π—Ç–∏ –ø–æ –∏–º–µ–Ω–∏'], ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—é –∫–Ω–∏–∂–∫—É'],['–°–ø—Ä–∞–≤–∫–∞']]
    markup_key = ReplyKeyboardMarkup(
        reply_keyboard, one_time_keyboard=True, resize_keyboard=True)
    context.bot.send_message(
        update.effective_chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—É—é –∫–Ω–∏–≥—É! ü§ì\n/info", reply_markup=markup_key)
    log.log_one_argument('---–ó–ê–ü–£–°–ö –ë–û–¢–ê---')


def info(update, context):
    log.log_one_argument('–í—ã–∑–≤–∞–Ω–∞ —Å–ø—Ä–∞–≤–∫–∞')
    context.bot.send_message(
        update.effective_chat.id, "–î–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n\n/sum - —Å—É–º–º–∞\n/diff - —Ä–∞–∑–Ω–æ—Å—Ç—å\n/div - –¥–µ–ª–µ–Ω–∏–µ\n/mult - —É–º–Ω–æ–∂–µ–Ω–∏–µ\n/info - —Å–ø—Ä–∞–≤–∫–∞\n\n–ù–∞–∂–º–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—É, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –º–µ–Ω—é")


def message(update, context):
    text = update.message.text
    if text.lower() == '—Å–ø—Ä–∞–≤–∫–∞':
        log.log_one_argument('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–°–ø—Ä–∞–≤–∫–∞"')
        context.bot.send_message(update.effective_chat.id, '–í–≤–µ–¥–∏—Ç–µ /info')
    elif text.lower() == '—Å—É–º–º–∞':
        log.log_one_argument('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–°—É–º–º–∞"')
        context.bot.send_message(update.effective_chat.id, '–í–≤–µ–¥–∏—Ç–µ /sum')
    elif text.lower() == '—Ä–∞–∑–Ω–æ—Å—Ç—å':
        log.log_one_argument('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–†–∞–∑–Ω–æ—Å—Ç—å"')
        context.bot.send_message(update.effective_chat.id, '–í–≤–µ–¥–∏—Ç–µ /diff')
    elif text.lower() == '—É–º–Ω–æ–∂–µ–Ω–∏–µ':
        log.log_one_argument('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–£–º–Ω–æ–∂–µ–Ω–∏–µ"')
        context.bot.send_message(update.effective_chat.id, '–í–≤–µ–¥–∏—Ç–µ /mult')
    elif text.lower() == '–¥–µ–ª–µ–Ω–∏–µ':
        log.log_one_argument('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–î–µ–ª–µ–Ω–∏–µ"')
        context.bot.send_message(update.effective_chat.id, '–í–≤–µ–¥–∏—Ç–µ /div')
    else:
        log.log_two_argument('–Ø –Ω–µ –ø–æ–Ω—è–ª, —á—Ç–æ –æ–Ω —Ö–æ—Ç–µ–ª –æ—Ç –º–µ–Ω—è',
                             f'{update.message.chat.username}: {update.message.text}')
        context.bot.send_message(update.effective_chat.id, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é')


def unknown(update, context):
    log.log_two_argument('–Ø –Ω–µ –ø–æ–Ω—è–ª, —á—Ç–æ –æ–Ω —Ö–æ—Ç–µ–ª –æ—Ç –º–µ–Ω—è',
                         f'{update.message.chat.username}: {update.message.text}')
    context.bot.send_message(update.effective_chat.id, '–®–æ —Å–∫–∞–∑–∞–ª, –Ω–µ –ø–æ–π–º—É')


def add_writing(update, context):
    arg = context.args
    if not arg:
        log.log_one_argument(f'–ù–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è {update.message.text}')
        context.bot.send_message(
            update.effective_chat.id, '–í–≤–µ–¥–∏—Ç–µ /add –∏ –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª. –ù–∞–ø—Ä–∏–º–µ—Ä, —Å–∫–æ–ø–∏—Ä—É–π –∏ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:')
        context.bot.send_message(update.effective_chat.id, '/add –ê–Ω—è 787878')
    else:
        total = oper.add(arg)
        log.log_one_argument(total)
        context.bot.send_message(update.effective_chat.id, total)


def difference(update, context):
    arg = context.args
    if not arg:
        log.log_one_argument(f'–ù–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è {update.message.text}')
        context.bot.send_message(
            update.effective_chat.id, '–í–≤–µ–¥–∏ /diff –∏ 2 —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª. –ù–∞–ø—Ä–∏–º–µ—Ä, —Å–∫–æ–ø–∏—Ä—É–π –∏ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:')
        context.bot.send_message(update.effective_chat.id, '/diff 39 32')
    else:
        total = oper.diff(arg)
        log.log_one_argument(total)
        context.bot.send_message(update.effective_chat.id, total)


def division(update, context):
    arg = context.args
    if not arg:
        log.log_one_argument(f'–ù–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è {update.message.text}')
        context.bot.send_message(
            update.effective_chat.id, '–í–≤–µ–¥–∏ /div –∏ 2 —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª. –ù–∞–ø—Ä–∏–º–µ—Ä, —Å–∫–æ–ø–∏—Ä—É–π –∏ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:')
        context.bot.send_message(update.effective_chat.id, '/div 66 4')
    else:
        total = oper.div(arg)
        log.log_one_argument(total)
        context.bot.send_message(update.effective_chat.id, total)


def multiplication(update, context):
    arg = context.args
    if not arg:
        log.log_one_argument(f'–ù–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è {update.message.text}')
        context.bot.send_message(
            update.effective_chat.id, '–í–≤–µ–¥–∏ /mult –∏ 2 —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª. –ù–∞–ø—Ä–∏–º–µ—Ä, —Å–∫–æ–ø–∏—Ä—É–π –∏ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:')
        context.bot.send_message(update.effective_chat.id, '/mult 25 3')
    else:
        total = oper.mult(arg)
        log.log_one_argument(total)
        context.bot.send_message(update.effective_chat.id, total)


start_handler = CommandHandler('start', start)
info_handler = CommandHandler('info', info)
sum_handler = CommandHandler('sum', summ)
dif_handler = CommandHandler('diff', difference)
div_handler = CommandHandler('div', division)
mult_handler = CommandHandler('mult', multiplication)


message_handler = MessageHandler(Filters.text, message)
unknown_handler = MessageHandler(Filters.command, unknown)

dispatcher.add_handler(start_handler)
dispatcher.add_handler(info_handler)
dispatcher.add_handler(sum_handler)
dispatcher.add_handler(dif_handler)
dispatcher.add_handler(div_handler)
dispatcher.add_handler(mult_handler)
dispatcher.add_handler(unknown_handler)
dispatcher.add_handler(message_handler)


print('server started')

updater.start_polling()
updater.idle()